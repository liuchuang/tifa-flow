dnl Process this file with autoconf to produce a configure script.
# $Id: configure.in 248 2008-12-17 18:20:41Z gregor $

# AC_INIT(main.cc)
# AM_INIT_AUTOMAKE(tm, 1.0)
BROCCOLI_PROGS=broSendPkts
AC_INIT(tm,HEAD)
AC_CANONICAL_TARGET
AC_LANG(C++)
AM_INIT_AUTOMAKE
AM_CONFIG_HEADER(config.h)
AC_CHECK_SIZEOF(void*)
AC_PROG_RANLIB
AC_CHECK_TOOL(AR,ar)
AC_PROG_CC
AC_PROG_CXX
AM_PROG_CC_C_O
#AC_PROG_CXXCPP

OUR_CFLAGS="-O2 -g -Wall -I/usr/local/include"
LDFLAGS="${LDFLAGS} -L/usr/local/lib"

CXXFLAGS="${CXXFLAGS} ${OUR_CFLAGS}"
CFLAGS="${CXXFLAGS} ${OUR_CFLAGS}"
CPPFLAGS="${CXXFLAGS} ${OUR_CFLAGS}"

do_debug="no"
AC_ARG_ENABLE(debug,
    [AC_HELP_STRING([--enable-debug],[no compiler optimizations])],
    CFLAGS="-DDEBUG -g `echo $CFLAGS | sed -e 's/-O2/-O0/g'`"
    CXXFLAGS="-DDEBUG -g `echo $CXXFLAGS | sed -e 's/-O2/-O0/g'`"
    CPPFLAGS="-DDEBUG -g `echo $CPPFLAGS | sed -e 's/-O2/-O0/g'`"
	do_debug="yes"
    ,)

AC_ARG_WITH(broccoli,
    [AC_HELP_STRING([--without-broccoli],[do not use Broccoli library. Default: use when found])],
	[ case "${withval}" in
		yes) have_broccoli="yes";;
		no) have_broccoli="no";;
		*)  AC_MSG_ERROR([bad value ${withval} for --with-broccoli]) ;;
	 esac],
	 )

case "$target_os" in
freebsd*)
	use_ptmalloc="yes"
	;;
*)
	use_ptmalloc="no"
	;;
esac

AC_ARG_ENABLE(ptmalloc,
    [AC_HELP_STRING([--enable-ptmalloc],[use ptmalloc as a malloc replacement. Default: enabled on FreeBSD, disabled otherwise])],
	[ case "${enableval}" in 
		yes) use_ptmalloc="yes";;
		no) use_ptmalloc="no";;
		*) AC_MSG_ERROR([bad value ${enableval} for --enable-ptmalloc]) ;;
	esac],
	)
AM_CONDITIONAL(USE_PTMALLOC, test x$use_ptmalloc = xyes)

LDFLAGS="${LDFLAGS} -L`eval echo $libdir`"
CXXFLAGS="${CXXFLAGS} -I`eval echo $includedir`"
CFLAGS="${CXXFLAGS} -I`eval echo $includedir`"
CPPFLAGS="${CXXFLAGS} -I`eval echo $includedir`"

# TODO: check for other functions in these libs
AC_CHECK_LIB(pcap, main, , AC_MSG_ERROR([libpcap not found]))
AC_CHECK_HEADERS([pcap.h] , , AC_MSG_ERROR([pcap headers not found]))

AC_CHECK_LIB(pthread, main, , AC_MSG_ERROR([libpthread not found]))
AC_CHECK_HEADERS([pthread.h] , , AC_MSG_ERROR([pthread headers not found]))

# stole from quagga. Hope this works decently on ALL systems.
AC_CHECK_LIB(termcap, tputs, LIBREADLINE="$LIBREADLINE -ltermcap",
   [AC_CHECK_LIB(tinfo, tputs, LIBREADLINE="$LIBREADLINE -ltinfo",
	 [AC_CHECK_LIB(curses, tputs, LIBREADLINE="$LIBREADLINE -lcurses",
	   [AC_CHECK_LIB(ncurses, tputs, 
					 LIBREADLINE="$LIBREADLINE -lncurses")]
	  )]
	)]
  )
AC_CHECK_LIB(readline, main, LIBREADLINE="$LIBREADLINE -lreadline",,
                      "$LIBREADLINE")
#AC_CHECK_LIB(readline, main, , AC_MSG_ERROR([libreadline not found]))
if test $ac_cv_lib_readline_main = no; then
AC_MSG_ERROR([libreadline not found])
fi
AC_CHECK_HEADERS([readline/readline.h] , , AC_MSG_ERROR([readline headers not found]))
AC_SUBST(LIBREADLINE)

AC_CHECK_LIB(pcre, main, , AC_MSG_ERROR([libpcre not found]))
AC_CHECK_LIB(pcrecpp, main, , AC_MSG_ERROR([libpcrecpp not found]))
AC_CHECK_HEADERS([pcrecpp.h] , , AC_MSG_ERROR([pcrecpp headers not found]))

if test x$have_broccoli != xno; then
	AC_CHECK_LIB(broccoli, main, ,broccoli_lib="no")
	AC_CHECK_HEADERS([broccoli.h] , ,broccoli_header="no")
fi

if test x$broccoli_lib == xno; then
	if test x$have_broccoli == xyes; then
		AC_MSG_ERROR([libbroccoli not found, but it has been requested with --with-broccoli])
	fi
	have_broccoli=no;
fi	
if test x$broccoli_header == xno; then
	if test x$have_broccoli == xyes; then
		AC_MSG_ERROR([libbroccoli headers not found, but it has been requested with --with-broccoli])
	fi
	have_broccoli=no;
fi
if test x$have_broccoli != xno; then
	have_broccoli=yes;
fi

AC_CHECK_LIB(pcapnav, main, , AC_MSG_ERROR([libpcapnav not found]))
AC_CHECK_HEADERS([pcapnav.h] , , AC_MSG_ERROR([pcapnav headers not found]))

# LIBS=

#AC_CHECK_LIB(db, main, , AC_MSG_ERROR([libdb not found]))
#AC_SEARCH_LIBS(dbopen, [db4 db], AC_MSG_WARN([libdb found]), AC_MSG_ERROR([libdb not found]))
#AC_CHECK_HEADERS([db.h], , AC_MSG_ERROR([db headers not found]))

AC_CHECK_HEADERS([pcap.h readline/readline.h] , , AC_MSG_ERROR([header file not found]))
AM_PROG_LEX
AC_PROG_YACC

if test "$have_broccoli" == "yes"; then
   BROCCOLI_PROGS="broSendPkts querybm"
else
#   AC_MSG_WARN([$PACKAGE will be built without Broccoli interface], BROCCOLI_PROGS=""])
   BROCCOLI_PROGS=""
fi

AC_SUBST(BROCCOLI_PROGS)
AC_OUTPUT(Makefile)

echo
echo "Timemachine Configuration Summary"
echo "=========================================================="
echo " - Debugging enabled:    $do_debug"
echo " - broccoli support:     $have_broccoli"
echo " - Using ptmalloc:       $use_ptmalloc"
echo
